//
//  CoinDetailPresenter.swift
//  CoinPrice
//
//  Created by Ratchapol Pattarakanoksiri on 10/3/24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CoinDetailPresentationLogic {
    func presentCoinDetail(response: CoinDetail.GetCoinDetail.Response)
    func presentGoToWebsite(response: CoinDetail.GoToWebsite.Response)
}

class CoinDetailPresenter: CoinDetailPresentationLogic {
    weak var viewController: CoinDetailDisplayLogic?

    // MARK: Do something

    func presentCoinDetail(response: CoinDetail.GetCoinDetail.Response) {
        let coin = response.coinInfo

        let marketCap = formatNumber(Int(coin?.marketCap ?? "0") ?? 0)

        let viewModel = CoinDetail.GetCoinDetail.ViewModel(
            iconImageUrlString: coin?.iconURL?.replacingOccurrences(of: ".svg", with: ".png"),
            name: coin?.name ?? "-",
            nameColorHex: coin?.color,
            symbol: "(\(coin?.symbol ?? "-"))",
            price: "$ " + (coin?.price?.currency(digits: 2) ?? "-"),
            marketCap: "$ " + marketCap,
            detail: coin?.description ?? "-")
        viewController?.displayCoinDetail(viewModel: viewModel)
    }

    func presentGoToWebsite(response: CoinDetail.GoToWebsite.Response) {
        if let url = URL(string: response.urlString ?? "") {
            viewController?.displayGoToWebSite(viewModel: CoinDetail.GoToWebsite.ViewModel(url: url))
        }
    }

    private func formatNumber(_ number: Int) -> String {
        let numberFormatter = NumberFormatter()
        numberFormatter.numberStyle = .decimal
        numberFormatter.maximumFractionDigits = 2

        if number >= 1_000_000_000_000 {
            let trillion = Double(number) / 1_000_000_000_000
            return numberFormatter.string(from: NSNumber(value: trillion))! + " trillion"
        } else if number >= 1_000_000_000 {
            let billion = Double(number) / 1_000_000_000
            return numberFormatter.string(from: NSNumber(value: billion))! + " billion"
        } else if number >= 1_000_000 {
            let million = Double(number) / 1_000_000
            return numberFormatter.string(from: NSNumber(value: million))! + " million"
        } else {
            return numberFormatter.string(from: NSNumber(value: number))!
        }
    }
}
