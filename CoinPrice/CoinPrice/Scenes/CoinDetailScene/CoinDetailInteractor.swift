//
//  CoinDetailInteractor.swift
//  CoinPrice
//
//  Created by Ratchapol Pattarakanoksiri on 10/3/24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CoinDetailBusinessLogic {
    func doGetCoinDetail(request: CoinDetail.GetCoinDetail.Request)
    func doGoToWebsite(request: CoinDetail.GoToWebsite.Request)
}

protocol CoinDetailDataStore {
    var uuid: String? { get set }
}

class CoinDetailInteractor: CoinDetailBusinessLogic, CoinDetailDataStore {
    var presenter: CoinDetailPresentationLogic?
    var worker: CoinDetailWorker?

    var uuid: String?

    var coinInfo: CoinInfo?

    func doGetCoinDetail(request: CoinDetail.GetCoinDetail.Request) {
        worker = CoinDetailWorker()
        let parameter = CoinDetailRequest.Parameters.init(uuid: uuid ?? "")
        worker?.loadCoinDetail(parameters: parameter, completion: { [weak self] result in
            switch result {
            case .success(_, let response):
                self?.coinInfo = response.data?.coin
                let response = CoinDetail.GetCoinDetail.Response(coinInfo: response.data?.coin)
                self?.presenter?.presentCoinDetail(response: response)
            case .notSuccess, .error:
                return
            }
        })
    }

    func doGoToWebsite(request: CoinDetail.GoToWebsite.Request) {
        presenter?.presentGoToWebsite(response: CoinDetail.GoToWebsite.Response(urlString: coinInfo?.websiteURL))
    }
}
